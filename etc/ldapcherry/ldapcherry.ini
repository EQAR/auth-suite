# global parameters
[global]

# listing interface
server.socket_host = '0.0.0.0'
# port
server.socket_port = 8389

tools.proxy.on = True
tools.proxy.base = '${LDAPCHERRY_URL}'

# number of threads
server.thread_pool = 8
#don't show traceback on error
request.show_tracebacks = False

# log configuration
log.access_handler = 'none'
log.error_handler = 'stdout'

# log level
log.level = 'info'

# session configuration
# activate session
tools.sessions.on = True
# session timeout
tools.sessions.timeout = 10
# file session storage(to use if multiple processes, 
# default is in RAM and per process)
#tools.sessions.storage_type = "file"
# session 
#tools.sessions.storage_path = "/var/lib/ldapcherry/sessions"

[attributes]

# file discribing form content
attributes.file = '/etc/ldapcherry/attributes.yml'

[roles]

# file listing roles
roles.file = '/etc/ldapcherry/roles.yml'

[mobileconfig]
template.file = '/etc/ldapcherry/user_profile.mobileconfig'

[autofill]
# autofill attributes
ldap.userPassword = '{SASL}%(uid)s@${KRB_REALM}'
ldap.cn = '%(givenName)s %(sn)s'

[resetpassword]
target_url = '${LDAPCHERRY_URL}/reset_password?token=%(token)s'
email_text = '/etc/ldapcherry/resetpassword.txt'
email_from = '${LDAPCHERRY_MAILFROM}'
email_subject = 'Reset your account password'
sendmail = '/usr/bin/msmtp'

[backends]

#####################################
#   configuration of ldap backend   #
#####################################

# name of the module
ldap.module = 'ldapcherry.backend.backendLdap'
# display name of the ldap
ldap.display_name = '${REALM_NAME} LDAP'

# uri of the ldap directory
ldap.uri = 'ldap://slapd'
# bind dn to the ldap
ldap.binddn = ''
# password of the bind dn
ldap.password = ''
# bind with session credentials after login
ldap.bind_session = 1
# timeout of ldap connexion (in second)
ldap.timeout = 15

# groups dn
ldap.groupdn = '${LDAP_SUFFIX}'
# users dn
ldap.userdn = '${LDAP_SUFFIX}'

# ldapsearch filter to get one specific user
# %(username)s is content of the attribute marked 'key: True' in the attributes.file config file
ldap.user_filter_tmpl = '(uid=%(username)s)'
# ldapsearch filter to get groups of a user
# %(username)s is content of the attribute marked 'key: True' in the attributes.file config file
ldap.group_filter_tmpl = '(|(memberUid=%(username)s)(member=uid=%(username)s,${LDAP_SUFFIX}))'
# filter to search users
# %(searchstring)s is the content passed through the search box
ldap.search_filter_tmpl = '(|(uid=%(searchstring)s*)(sn=%(searchstring)s*)(givenName=%(searchstring)s*)(mail=%(searchstring)s*))'

ldap.group_attr.memberUid = "%(uid)s"
ldap.objectclasses = 'person, organizationalPerson, inetOrgPerson'
ldap.dn_user_attr = 'uid'

# ensure that the user attribute is globally unique
ldap.unique_user_attr = 1

# filter to look up by username or email (for password reset)
ldap.user_email_filter_tmpl = '(|(uid=%(searchstring)s)(mail=%(searchstring)s))'
ldap.email_user_attr = 'mail'

# name of the module
kerberos.module = 'ldapcherry.backend.backendKerberos'
# display name of the ldap
kerberos.display_name = '${REALM_NAME} Kerberos'
# Kerberos realm
kerberos.realm = '${KRB_REALM}'
# Keytab
kerberos.keytab = '/etc/krb5keytab/ldapcherry.keytab'
# Server principal (default: ldapcherry/FQDN)
#kerberos.principal = ''

[ppolicy]

# password policy module
ppolicy.module = 'ldapcherry.ppolicy.checkpwned'

# Have I been pwned? URL
api_url = "https://api.pwnedpasswords.com/range/"

# parameters of the module
min_length = 8
min_upper = 1
min_digit = 1

# authentification parameters
[auth]

# Auth mode
# * and: user must authenticate on all backends
# * or:  user must authenticate on one of the backend
# * none: disable authentification
# * custom: custom authentification module (need auth.module param)
auth.mode = 'and'

# custom auth module to load
#auth.module = 'ldapcherry.auth.modNone'

# resources parameters
[resources]
# templates directory
templates.dir = '/opt/ldapcherry/resources/templates/'

[/static]
# enable serving static file through ldapcherry
# set to False if files served directly by an
# http server for better performance
tools.staticdir.on = True
# static resources directory (js, css, images...)
tools.staticdir.dir = '/opt/ldapcherry/resources/static/'

## custom javascript files
#[/custom]
#
## enable serving static file through ldapcherry
## set to False if files served directly by an
## http server for better performance
#tools.staticdir.on = True

## path to directory containing js files
## use it to add custom auto-fill functions
#tools.staticdir.dir = '/etc/ldapcherry/custom_js/'
